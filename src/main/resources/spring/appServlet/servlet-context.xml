<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!--<beans:bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  -->
        <!--<beans:property name="messageConverters">-->
                <!--<beans:bean class="org.springframework.http.converter.StringHttpMessageConverter">  -->
                    <!--<beans:property name="supportedMediaTypes" value="application/json;charset=UTF-8">-->
                    <!--</beans:property>-->
                <!--</beans:bean>  -->
        <!--</beans:property>  -->
    <!--</beans:bean>-->

	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<beans:property name="supportedMediaTypes">
						<beans:list>
							<beans:value>text/html;charset=UTF-8</beans:value>
							<beans:value>application/json;charset=UTF-8</beans:value>
						</beans:list>
					</beans:property>
				</beans:bean>
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven > <!-- conversion-service="conversionService" -->
	    <!-- 
	          自己定义参数的注解
	    @RequestAttribute("foo") String foo
	    按照自定义的注解，对参数进行解析
	     -->
		<!-- <argument-resolvers>
			<beans:bean class="org.springframework.samples.mvc.data.custom.CustomArgumentResolver"/>
		</argument-resolvers>
		<async-support default-timeout="3000">
			<callable-interceptors>
				<beans:bean class="org.springframework.samples.mvc.async.TimeoutCallableProcessingInterceptor" />
			</callable-interceptors>
		</async-support> -->
	</annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Only needed because we install custom converters to support the examples in the org.springframewok.samples.mvc.convert package -->
	<!-- 自定义接受参数，进行格式转换 ；
		例如，发送参数123-45-678 ,接受后直接转换为12345678
	 -->
	<!-- <beans:bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<beans:property name="formatters">
            <beans:bean class="org.springframework.samples.mvc.convert.MaskFormatAnnotationFormatterFactory" />
		</beans:property>
	</beans:bean> -->

	<!-- Only needed because we require fileupload in the org.springframework.samples.mvc.fileupload package -->
	<!-- <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
 -->
	<!-- Imports user-defined @Controller beans that process client requests -->
	<beans:import resource="controllers.xml" />

	<task:annotation-driven />

</beans:beans>